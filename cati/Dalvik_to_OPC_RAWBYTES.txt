invoke-virtual-quick/range -> !
throw-verification-error -> "
invoke-object-init/range -> #
invoke-super-quick/range -> $
invoke-polymorphic/range -> %
filled-new-array/range -> &
invoke-interface/range -> '
return-void-no-barrier -> (
packed-switch-payload -> )
sparse-switch-payload -> *
invoke-virtual/range -> +
iget-object-volatile -> ,
execute-inline/range -> -
invoke-virtual-quick -> .
iput-object-volatile -> ƙ
sget-object-volatile -> 0
sput-object-volatile -> 1
invoke-direct/range -> 2
invoke-static/range -> 3
invoke-direct-empty -> 4
lastArtVersion -> 5
invoke-custom/range -> 6
const-method-handle -> 7
move-object/from16 -> 8
move-result-object -> 9
const-string/jumbo -> :
invoke-super/range -> ;
iget-wide-volatile -> <
iput-wide-volatile -> =
sget-wide-volatile -> >
sput-wide-volatile -> ?
ReferenceType.NONE -> @
iput-boolean-quick -> A
iget-boolean-quick -> B
invoke-super-quick -> C
invoke-polymorphic -> D
const-wide/high16 -> E
iget-object-quick -> F
iput-object-quick -> G
const-method-type -> H
move-wide/from16 -> I
move-result-wide -> J
filled-new-array -> K
invoke-interface -> L
add-double/2addr -> M
sub-double/2addr -> N
mul-double/2addr -> O
div-double/2addr -> P
rem-double/2addr -> Q
iput-short-quick -> R
iget-short-quick -> S
fill-array-data -> T
float-to-double -> U
double-to-float -> V
ushr-long/2addr -> W
add-float/2addr -> X
sub-float/2addr -> Y
mul-float/2addr -> Z
div-float/2addr -> [
rem-float/2addr -> š
iget-wide-quick -> ]
iput-wide-quick -> ^
iput-byte-quick -> _
iput-char-quick -> `
iget-byte-quick -> a
iget-char-quick -> b
move-object/16 -> c
move-exception -> d
invoke-virtual -> e
long-to-double -> f
double-to-long -> g
ushr-int/2addr -> h
add-long/2addr -> i
sub-long/2addr -> j
mul-long/2addr -> k
div-long/2addr -> l
rem-long/2addr -> m
and-long/2addr -> n
xor-long/2addr -> o
shl-long/2addr -> p
shr-long/2addr -> q
return-object -> r
const-wide/16 -> s
const-wide/32 -> t
monitor-enter -> u
packed-switch -> v
sparse-switch -> w
invoke-direct -> x
invoke-static -> y
int-to-double -> z
long-to-float -> {
float-to-long -> |
double-to-int -> }
add-int/2addr -> ~
sub-int/2addr -> ň
mul-int/2addr -> €
div-int/2addr -> ŋ
rem-int/2addr -> ‚
and-int/2addr -> ƒ
xor-int/2addr -> „
shl-int/2addr -> …
shr-int/2addr -> †
or-long/2addr -> ‡
add-int/lit16 -> ˆ
mul-int/lit16 -> ‰
div-int/lit16 -> Š
rem-int/lit16 -> ‹
and-int/lit16 -> Œ
xor-int/lit16 -> ŭ
rsub-int/lit8 -> Ž
ushr-int/lit8 -> ź
iget-volatile -> Ż
iput-volatile -> ‘
sget-volatile -> ’
sput-volatile -> “
array-payload -> ”
invoke-custom -> •
move-wide/16 -> –
const/high16 -> —
const-string -> ˜
monitor-exit -> ™
array-length -> š
new-instance -> ›
aget-boolean -> œ
aput-boolean -> é
iget-boolean -> ž
iput-boolean -> Ÿ
sget-boolean -> ÷
sput-boolean -> ¡
invoke-super -> ¢
int-to-float -> £
float-to-int -> ¤
int-to-short -> ¥
or-int/2addr -> ¦
or-int/lit16 -> §
add-int/lit8 -> ¨
mul-int/lit8 -> ©
div-int/lit8 -> ª
rem-int/lit8 -> «
and-int/lit8 -> ¬
xor-int/lit8 -> ­
shl-int/lit8 -> ®
shr-int/lit8 -> ¯
move/from16 -> °
move-object -> ±
move-result -> ²
return-void -> ³
return-wide -> ´
const-class -> µ
instance-of -> ¶
cmpl-double -> ·
cmpg-double -> ¸
aget-object -> ¹
aput-object -> º
iget-object -> »
iput-object -> ¼
sget-object -> ½
sput-object -> ¾
int-to-long -> ¿
long-to-int -> À
int-to-byte -> Á
int-to-char -> Â
or-int/lit8 -> Ã
const-wide -> Ä
check-cast -> Å
cmpl-float -> Æ
cmpg-float -> Ç
aget-short -> È
aput-short -> É
iget-short -> Ê
iput-short -> Ë
sget-short -> Ì
sput-short -> Í
neg-double -> Î
add-double -> Ï
sub-double -> Ð
mul-double -> Ñ
div-double -> Ò
rem-double -> Ó
iget-quick -> Ô
iput-quick -> Õ
move-wide -> Ö
new-array -> ×
aget-wide -> Ø
aget-byte -> Ù
aget-char -> Ú
aput-wide -> Û
aput-byte -> Ü
aput-char -> Ý
iget-wide -> Þ
iget-byte -> ß
iget-char -> à
iput-wide -> á
iput-byte -> â
iput-char -> ã
sget-wide -> ä
sget-byte -> å
sget-char -> æ
sput-wide -> ç
sput-byte -> è
sput-char -> é
neg-float -> ê
ushr-long -> ë
add-float -> ì
sub-float -> í
mul-float -> î
div-float -> ï
rem-float -> ð
const/16 -> ñ
cmp-long -> ò
neg-long -> ó
not-long -> ô
ushr-int -> õ
add-long -> ö
sub-long -> ÷
mul-long -> ø
div-long -> ù
rem-long -> ú
and-long -> û
xor-long -> ü
shl-long -> ý
shr-long -> þ
rsub-int -> ÿ
move/16 -> ¤
const/4 -> ³
goto/16 -> Ê
goto/32 -> Ë
neg-int -> ē
not-int -> Ĕ
add-int -> Ĩ
sub-int -> ĩ
mul-int -> Ī
div-int -> ī
rem-int -> Ĭ
and-int -> ĭ
xor-int -> į
shl-int -> İ
shr-int -> ı
or-long -> Ĺ
return -> °
if-eqz -> Ù
if-nez -> Ú
if-ltz -> Û
if-gez -> Ü
if-gtz -> Ý
if-lez -> Þ
or-int -> Į
const  -> µ
throw -> È
if-eq -> Ó
if-ne -> Ô
if-lt -> Õ
if-ge -> Ö
if-gt -> ×
if-le -> Ø
move -> ¢
goto -> É
aget -> ß
aput -> æ
iget -> í
iput -> ô
sget -> û
sput -> Ă
nop -> ¡
Lcom/.+ -> Ʃ
Ljava/.+ -> ƪ
Landroid.+ -> ƫ
.end method -> ȍ
.method -> Ȏ
a.+ -> 
b.+ -> 
c.+ -> 
d.+ -> 
e.+ -> 
f.+ -> 
g.+ -> 
h.+ -> 
i.+ -> 
j.+ -> 
k.+ -> 
l.+ -> 
m.+ -> 
n.+ -> 
o.+ -> 
p.+ -> 
q.+ -> 
r.+ -> 
s.+ -> 
t.+ -> 
u.+ -> 
v.+ -> 
w.+ -> 
x.+ -> 
y.+ -> 
z.+ -> 
\n -> ȏ